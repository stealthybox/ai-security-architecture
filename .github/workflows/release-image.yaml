name: release-image

on:
  push:
    tags:
      - 'proxy-llm-guard/*'
      - 'proxy-chatbot/*'

jobs:
  docker-push-component:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # for pushing
      id-token: write # for signing
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Install cosign
        uses: sigstore/cosign-installer@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # inspired by https://github.com/stefanprodan/podinfo/blob/b3396adb98a6a0f5eeedd1a600beaf5e954a1f28/.github/workflows/release.yml#L61-L94
      - name: Prepare tags
        id: prep
        env:
          REF_NAME: ${{ github.ref_name }}
        run: |
          if [[ $REF_NAME != */* ]]; then
              echo "Ref name is not in the format component/version"
              exit 1
          fi
          
          COMPONENT=$(echo "$REF_NAME" | cut -d'/' -f 1)
          VERSION=$(echo "$REF_NAME" | cut -d'/' -f 2)

          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "COMPONENT=${COMPONENT}" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
      - name: Generate images meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/${{ steps.prep.outputs.COMPONENT }}
          tags: |
            type=raw,value=${{ steps.prep.outputs.VERSION }}
            type=raw,value=latest-stable
      - name: Publish multi-arch image
        uses: docker/build-push-action@v6
        id: push
        with:
          sbom: true
          provenance: true
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: "./container/${{ steps.prep.outputs.COMPONENT }}"
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Sign image
        run: cosign sign --yes ghcr.io/${{ github.repository }}/${{ steps.prep.outputs.COMPONENT }}@${DIGEST}
        env:
          DIGEST: ${{ steps.push.outputs.digest }}
